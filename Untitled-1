// * ---- Pseudocode ----

Click start button
//   > Add click event to start button, it should execute a function called startGame()
// * Remove button from screen
//   > Target the hangman <section>
//   > Remove the '.game-over' class
//   > Add the '.game-active' class
// * Display the spaces for the word to be guessed
//   > Generate a word to be guessed. Define an array of words. Use Math floor & random to get a random word from the array.
//   > Save random word to wordToGuess
//   > To display the correct amount of spaces we'll use wordToGuess.length
//   > Using a for loop, set it to loop wordToGuess.length amount of times
//   > In each loop: create a div, add class .guessed-letter, append to guessContainer
// * Game state displayed on screen, e.g how many attempts have been made (maybe how many I have left)
//   > Game state section (.hangman) will be displayed when .game-active is added above
//   > using the attemptsMade, update the attemptsSpan with it's value
//   > attemptsSpan.innerText = attemptsMade

// * Click event on the keys within the keyboard
//   > Target the keys with `.key` class. Add a click event, executing submitLetter()
// * Attempts number should increase by 1
//   > attemptsMade should increase by 1
//   > attemptsSpan.innerText = attemptsMade
// * If a letter has been guessed correctly, we should see the empty spaces fill with the correct letter
//   > identify which letter has been clicked
//   > check every letter of wordToGuess, if it matches the clicked letter, display it



// - As a user, I want to see clearly when I have won the game
// * attemptsMade === allowedAttempts, endGame()
// * Update the messageDisplay when the game is won
//   > messageDisplay.innerText = 'You won!'

// - As a user, I want to see clearly when I have lost the game
// * Update the messageDisplay when the game is won
//   > messageDisplay.innerText = 'You lost!'

// * Add start button back to screen
//   > Target the hangman <section>
//   > Remove the '.game-active' class
//   > Add the '.game-over' class
//   > Target the button, update its innerText to 'Restart Game'
